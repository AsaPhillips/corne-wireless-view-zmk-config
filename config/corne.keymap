/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* @TODO
[ ] Key repeate for thumb buttons
[ ] Key repeate for home row mods!
[ ] Look into cross-hand only modifiers? I don't know what that even is!
[ ] Look into quick-tap-ms to get key repeate?
[ ] Figure out how I do caps word currently? 
[ ] Figure out how to replace CG_TOGG in ZMK, to support both win and macos
[ ] Figure out where Blue thooth commands go #include <dt-bindings/zmk/bt.h>
*/
// Layer Def

#define BASE  0
#define MBO   1
#define CODE  2
#define NAV   3
#define MOUSE 4
#define SYM   5
#define NUM   6
#define FUN   7

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "home row mods";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <50>; // @TEST
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // &lt {
        //     tapping-term-ms = <200>;
        // };
        u_lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "layer tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&kp TAB    &kp Q       &kp W       &kp E        &kp R        &kp T      &kp Y      &kp U        &kp I        &kp O       &kp P          &none
&kp ESC    &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHFT F  &kp G      &kp H      &hm RSHFT J  &hm RCTRL K  &hm RALT L  &hm RGUI SEMI  &kp SQT
&kp LSHFT  &kp Z       &kp X       &kp C        &kp V        &kp B      &kp N      &kp M        &kp COMMA    &kp DOT     &kp FSLH       &none
                    &u_lt CODE ESC &u_lt NAV SPACE &u_lt MOUSE TAB      &u_lt SYM ENTER  &u_lt NUM BACKSPACE &u_lt FUN DELETE
            >;
        };

        mbo_layer {
            label = "MBO";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        code_layer {
            label = "Code";
            bindings = <
&trans  &trans    &trans    &trans     &trans      &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans     &trans      &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans     &trans      &trans    &trans  &trans  &trans
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp LC(C)  &kp LC(Z)      &kp LC(Y)   &kp LC(X)  &kp LC(V)   &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp LEFT   &kp DOWN       &kp UP      &kp RIGHT  &kp CAPS    &trans
&trans  &trans    &trans    &trans     &trans     &trans    &kp HOME   &kp PG_DN      &kp PG_UP   &kp END    &kp INSERT  &trans
                            &trans     &trans     &trans    &kp ENTER  &kp BACKSPACE  &kp DELETE
            >;
        };

        mouse_layer {
            label = "Mouse";
            bindings = <
&trans  &trans    &trans    &trans     &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans     &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans     &trans    &trans    &trans  &trans  &trans
            >;
        };

        sym_layer {
            label = "Symbol";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans   &trans   &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        num_layer {
            label = "Number";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans   &trans   &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };


        fun_layer {
            label = "Func";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans   &trans   &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };
    };
};
